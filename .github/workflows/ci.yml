name: CI/CD Pipeline for CRM-Admin-Dashboard

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Frontend CI
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install and Build Frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build
        env:
          CI: false

      - name: Run Frontend Tests
        working-directory: ./frontend
        run: |
          npm test -- --watchAll=false

      # Backend CI
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install psycopg2-binary pytest flask bcrypt pyjwt python-dotenv

      - name: Run Backend Tests
        working-directory: ./backend
        run: |
          pytest -s

      # Frontend CD to GitHub Pages
      - name: Deploy Frontend to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/build

      # Backend CD to Heroku
      - name: Deploy Backend to Heroku
        if: github.ref == 'refs/heads/main'
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          pip install heroku3
          echo "machine api.heroku.com
            login ${{ secrets.HEROKU_EMAIL }}
            password ${{ secrets.HEROKU_API_KEY }}" > ~/.netrc
          cd backend
          heroku git:remote -a your-heroku-app-name  # Replace with your actual Heroku app name
          git subtree push --prefix backend heroku main